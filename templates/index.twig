{% extends "layout.twig" %}

{% block head %}
    {{ parent() }}
    <script type="text/javascript" src="js/vue.min.js"></script>
{% endblock %}

{% block wrapper %}

    <!-- Sidebar -->
    <ul class="sidebar navbar-nav">
      <li class="nav-item active">
        <a class="nav-link" href="index.html">
          <i class="fas fa-fw fa-tachometer-alt"></i>
          <span>Dashboard</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="sdi.html">
          <i class="fas fa-fw fa-exchange-alt"></i>
          <span>SDI</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="td0000001.html">
          <i class="fas fa-fw fa-building"></i>
          <span>TD0000001</span>
        </a>
      </li>
    </ul>

    <div id="content-wrapper">
      <div class="container-fluid">
        <ul>
          <li>
            <button type="button" onclick="get('/sdi/rpc/clear');" class="btn btn-info">Clear (resets the state)</button>
          </li>
          <li>
            <input id="dt" type="datetime-local">
            <button type="button" onclick="post('/sdi/rpc/timestamp', 'timestamp', 'dt');" class="btn btn-info">Set the simulated date & time</button>
          </li>
          <li>
            <input id="speed" type="number" min="1" max="1000000000">
            <button type="button" onclick="post('/sdi/rpc/speed', 'speed', 'speed');" class="btn btn-info">Set factor for simulated time to wallclock time</button>
          </li>
          <li>
            <button type="button" onclick="get('/sdi/rpc/datetime', 'simtime');" class="btn btn-info">Show current simulation time</button>
            <span id="simtime"></span>
          </li>
        </ul>
      </div>  <!-- /.container-fluid -->
    </div> <!-- /.content-wrapper -->

{% endblock %}
{% block footer %}
    {{ parent() }}
    <script type="text/javascript">
      function get(url, element) {
        var request = new XMLHttpRequest();
        request.open("GET", url);
        request.onload = function() {
          if (request.status == 200) {
            if (element) {
              document.getElementById(element).innerHTML = request.responseText;
            }
          } else {
            console.error(request.responseText);
          }
        };
        request.send();
      }
      function post(url, parameter, element) {
        var request = new XMLHttpRequest();
        request.open("POST", url);
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.onload = function() {
          if ((request.status != 200) && (request.status != 201)) {
            console.error(request.responseText);
          }
        };
        var value = document.getElementById(element).value;
        request.send(parameter + '=' + value);
      }
      var app = new Vue({
        el: '#tables'
      });
      document.addEventListener('DOMContentLoaded', function() {
        console.log("DOM fully loaded and parsed");
      });
    </script>
{% endblock %}
